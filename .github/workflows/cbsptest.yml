name: CBSP Plugin Tests

'on':
  push:
    branches:
      - bug-fixes
  pull_request: null

jobs:
  check-wp-version:
    runs-on: ubuntu-latest
    outputs:
      should_run_tests: ${{ steps.check.outputs.should_run }}
      wp_version: ${{ steps.check.outputs.wp_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download .last-wp-version artifact (if exists)
        uses: actions/download-artifact@v4
        with:
          name: last-wp-version
          path: ./version-cache
        continue-on-error: true

      - name: Get latest WordPress version & compare
        id: check
        run: |
          mkdir -p ./version-cache
          latest=$(curl -s https://api.wordpress.org/core/version-check/1.7/ | jq -r '.offers[0].version')
          echo "Latest WordPress version: $latest"

          if [ -f ./version-cache/.last-wp-version ]; then
            last=$(cat ./version-cache/.last-wp-version | tr -d '\n\r')
          else
            last=""
          fi

          echo "Last tested version: $last"

          echo "$latest" > ./version-cache/.last-wp-version

          if [ -z "$last" ] || [ "$latest" != "$last" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

          echo "wp_version=$latest" >> $GITHUB_OUTPUT


      - name: Upload updated .last-wp-version
        uses: actions/upload-artifact@v4
        with:
          name: last-wp-version
          path: ./version-cache/.last-wp-version

  test:
    needs: check-wp-version
    if: needs.check-wp-version.outputs.should_run_tests == 'true'
    runs-on: ubuntu-latest
    env:
      WP_VERSION: ${{ needs.check-wp-version.outputs.wp_version }}
      WP_TESTS_PHPUNIT_POLYFILLS_PATH: vendor/yoast/phpunit-polyfills

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - '3306:3306'
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.composer/cache
            vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Install WordPress & WooCommerce
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp

          wp core download --path=/tmp/wordpress --version=${{ env.WP_VERSION }} --allow-root
          wp config create --path=/tmp/wordpress --dbname=wordpress_test --dbuser=root --dbpass=root --dbhost=127.0.0.1 --allow-root
          wp core install --path=/tmp/wordpress --url=http://localhost --title="Test Site" --admin_user=admin --admin_password=password --admin_email=test@example.com --allow-root

          wp plugin install woocommerce --activate --path=/tmp/wordpress --allow-root

      - name: Install and activate plugin
        run: |
          mkdir -p /tmp/wordpress/wp-content/plugins/choose-your-best-selling-products
          cp -r . /tmp/wordpress/wp-content/plugins/choose-your-best-selling-products
          wp plugin activate choose-your-best-selling-products --path=/tmp/wordpress --allow-root

      - name: Check PHPUnit Version
        run: |
          ls -al vendor/bin
          vendor/bin/phpunit --version

      - name: Install Subversion (svn)
        run: sudo apt-get update && sudo apt-get install -y subversion

      - name: Set Polyfills Path
        run: echo "WP_TESTS_PHPUNIT_POLYFILLS_PATH=$PWD/vendor/yoast/phpunit-polyfills" >> $GITHUB_ENV

      - name: Install WP Test Suite
        env:
          WP_TESTS_FORCE_REINSTALL: 1
        run: |
          bash bin/install-wp-tests.sh wordpress_test root root 127.0.0.1 latest

      - name: Run PHPUnit tests
        id: test
        run: |
          result=$(vendor/bin/phpunit --debug 2>&1 || true)
          echo "$result" > test_output.txt

          echo "result<<EOF" >> $GITHUB_OUTPUT
          echo "$result" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if echo "$result" | grep -i "Warning"; then
            echo "has_warning=true" >> $GITHUB_OUTPUT
          fi

          if echo "$result" | grep -i "Error"; then
            echo "has_error=true" >> $GITHUB_OUTPUT
          fi

      - name: Send Email if Test Fails or Has Warning
        if: steps.test.outputs.has_error == 'true' || steps.test.outputs.has_warning == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "[Test Alert] Plugin Test Failed or Warned on WP ${{ env.WP_VERSION }}"
          to: your@email.com
          from: CBSP Plugin Bot <your@email.com>
          body: |
            Hello üëã

            Test failed or returned warnings while testing plugin `choose-your-best-selling-products`.

            üí° Environment:
            - WordPress: ${{ env.WP_VERSION }}
            - PHP: 8.2
            - MySQL: 5.7

            üß™ PHPUnit Output:
            ${{ steps.test.outputs.result }}

      - name: Fail job if Error or Warning
        if: steps.test.outputs.has_error == 'true' || steps.test.outputs.has_warning == 'true'
        run: exit 1

      - name: Send Success Email if All Good
        if: steps.test.outputs.has_error != 'true' && steps.test.outputs.has_warning != 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "[‚úÖ SUCCESS] CBSP Plugin Test Passed on WP ${{ env.WP_VERSION }}"
          to: veeraj11yadav@gmail.com
          from: CBSP Plugin Bot <your@email.com>
          body: |
            Hello üëã

            All plugin checks passed successfully for `choose-your-best-selling-products`.

            ‚úÖ Checklist:
            - ‚úîÔ∏è WordPress Installed (v${{ env.WP_VERSION }})
            - ‚úîÔ∏è WooCommerce Installed
            - ‚úîÔ∏è Plugin Activated
            - ‚úîÔ∏è No PHPUnit Warnings or Errors

            ‚ÑπÔ∏è Test environment:
            - PHP: 8.2
            - MySQL: 5.7

            Have a great day!

      - name: Trigger deploy workflow (dry run)
        if: steps.test.outputs.has_error != 'true' && steps.test.outputs.has_warning != 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.DEPLOY_PAT }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "deploy.yml",
              ref: "bug-fixes" // or "master" if needed
            });
